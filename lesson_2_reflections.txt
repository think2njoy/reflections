What happens when you initialize a repository? Why do you need to do it?
when you initialize a repo, you get .git on your directory -- basically, it enables the files on this repo to be 
tracked / commited. You need to do that to maintain snapshots of changes in your repo. 

How is the staging area different from the working directory and the repository? 
What value do you think it offers?
contents of the staging area can be directly committed to the repo, whereas the working directory 
contents need to be added to the staging area in the first place. 
staging area helps to add those file(s) that are done, so that you can decide when to commit or create a snapshot 
of the current state of repo in a more flexible manner. 



How can you use the staging area to make sure you have one commit per logical change?
by committing file(s) in the staging area that adds up to one logical change. 

What are some situations when branches would be helpful in keeping your history organized? How would branches help?
Branches are helpful especially to explore newer ideas, without disturbing the working code. 
Also the branch label helps in keeping track of knowing what was done. 

How do the diagrams help you visualize the branch structure?
they help to know where you are. 

and what to do as well. 
